{"version":3,"sources":["components/title.js","components/charts.js","App.js","serviceWorker.js","index.js","zalazone.png"],"names":["Title","props","react_default","a","createElement","className","getHours","hours","i","push","getLastSevenDays","days","dates","date","Date","last","getTime","toLocaleDateString","Chart","es","data","labels","datasets","label","borderColor","fill","backgroundColor","options","title","display","text","fontSize","legend","scales","yAxes","ticks","stepSize","suggestedMin","suggestedMax","padding","xAxes","maintainAspectRatio","src","zalazone","App","state","charts","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ba48af2c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//importing all the required files\r\n//defining title functional component\r\n\r\nconst Title = props => {\r\n  return (\r\n    <div className=\"jumbotron header sticky-top\">\r\n      <div className=\"row justify-content-center\">\r\n        <h1>Zone Weather</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//exporting the title module\r\nexport default Title;\r\n","import React from 'react';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport zalazone from '../zalazone.png'\r\n\r\nconst getHours = () => {\r\n  const hours = [];\r\n  for (let i = 0; i <= 24; i += 2)\r\n    hours.push (i + 'h');\r\n\r\n  return hours;\r\n};\r\n\r\nconst getLastSevenDays = () => {\r\n  let days = 7;\r\n  let dates = [];\r\n  while (days > 0) {\r\n    let date = new Date ();\r\n    let last = new Date (date.getTime () - days * 24 * 60 * 60 * 1000);\r\n\r\n    dates.push (last.toLocaleDateString ());\r\n\r\n    days--;\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nconst Chart = props => {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-11 col-md-5 chart shadow p-3 mb-5 bg-white rounded\">\r\n          <Line\r\n            data={{\r\n              labels: getHours (),\r\n              datasets: [\r\n                {\r\n                  label: 'A sensor',\r\n                  data: [-2, -2, 0, 4, 6, 8, 8, 9, 9, 7, 3, 2, 0],\r\n                  borderColor: '#7dba41',\r\n                  fill: false,\r\n                  backgroundColor: '#7dba41',\r\n                },\r\n                {\r\n                  label: 'B sensor',\r\n                  data: [-3, -2.5, -0.5, 4, 7, 9, 9, 10, 8.5, 7.5, 1, 0, -2],\r\n                  borderColor: '#3A86FF',\r\n                  fill: false,\r\n                  backgroundColor: '#3A86FF',\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: 'Temperature variation last day',\r\n                fontSize: 20,\r\n              },\r\n              legend: {\r\n                display: true,\r\n                labels: {\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      stepSize: 2,\r\n                      suggestedMin: -5,\r\n                      suggestedMax: 20,\r\n                      padding: 10,\r\n                      fontSize: 14,\r\n                    },\r\n                  },\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      padding: 25,\r\n                      fontSize: 14,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n              maintainAspectRatio: false,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-11 col-md-5 offset-md-1 shadow p-3 mb-5 bg-white rounded\">\r\n          <Bar\r\n            data={{\r\n              labels: getLastSevenDays (),\r\n              datasets: [\r\n                {\r\n                  label: 'A sensor',\r\n                  data: [5.2, 4.7, 4.5, 4.6, 5, 4.9, 4.5],\r\n                  borderColor: '#7dba41',\r\n                  fill: false,\r\n                  backgroundColor: '#7dba41',\r\n                },\r\n                {\r\n                  label: 'B sensor',\r\n                  data: [5.3, 4.5, 4.6, 4.8, 5, 4.7, 4.6],\r\n                  borderColor: '#3A86FF',\r\n                  fill: false,\r\n                  backgroundColor: '#3A86FF',\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: 'Last week daily average temperature',\r\n                fontSize: 20,\r\n              },\r\n              legend: {\r\n                display: true,\r\n                labels: {\r\n                  fontSize: 16,\r\n                },\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      stepSize: 1,\r\n                      suggestedMin: 0,\r\n                      suggestedMax: 10,\r\n                      padding: 10,\r\n                      fontSize: 14,\r\n                    },\r\n                  },\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      padding: 25,\r\n                      fontSize: 14,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n              maintainAspectRatio: false,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-11 chart shadow p-3 mb-5 bg-white rounded\">\r\n          <img src={zalazone}></img>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Title from './components/title';\r\nimport Chart from './components/charts';\r\n\r\n//imported the required files\r\n\r\n//main APP component\r\nclass App extends React.Component {\r\n  state = {};\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Title />\r\n        <Chart />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//exporting the APP module\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/zalazone.7ca95356.png\";"],"sourceRoot":""}